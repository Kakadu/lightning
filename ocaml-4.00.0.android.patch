diff -urN ocaml-4.00/asmrun/arm.S ocaml-4.00-android/asmrun/arm.S
--- ocaml-4.00/asmrun/arm.S	2012-04-05 00:03:18.728894518 +0400
+++ ocaml-4.00-android/asmrun/arm.S	2012-04-05 02:46:49.084301660 +0400
@@ -53,7 +53,7 @@
         push    {lr}; \
         bl      __gnu_mcount_nc
 #else
-#define PROFILE
+#define PROFILE 
 #endif
 
 /* Allocation functions and GC interface */
diff -urN ocaml-4.00/asmrun/signals_osdep.h ocaml-4.00-android/asmrun/signals_osdep.h
--- ocaml-4.00/asmrun/signals_osdep.h	2012-04-05 00:03:18.728894518 +0400
+++ ocaml-4.00-android/asmrun/signals_osdep.h	2012-04-06 01:17:15.317472924 +0400
@@ -61,7 +61,7 @@
 
 /****************** ARM, Linux */
 
-#elif defined(TARGET_arm) && (defined(SYS_linux_eabi) || defined(SYS_linux_eabihf))
+#elif defined(TARGET_arm) && (defined(SYS_linux_eabi) || defined(SYS_linux_eabihf)) && !defined(ANDROID)
 
   #include <sys/ucontext.h>
 
diff -urN ocaml-4.00/byterun/Makefile.common ocaml-4.00-android/byterun/Makefile.common
--- ocaml-4.00/byterun/Makefile.common	2012-04-05 00:03:19.668424588 +0400
+++ ocaml-4.00-android/byterun/Makefile.common	2012-04-06 01:37:22.957562804 +0400
@@ -59,6 +59,14 @@
 	  sed -f ../tools/cleanup-header $$i > $(LIBDIR)/caml/$$i; \
 	done
 	cp ld.conf $(LIBDIR)/ld.conf
+
+
+installopt:
+	if test -d $(LIBDIR)/caml; then : ; else mkdir $(LIBDIR)/caml; fi
+	for i in $(PUBLIC_INCLUDES); do \
+	   sed -f ../tools/cleanup-header $$i > $(LIBDIR)/caml/$$i; \
+	 done
+
 .PHONY: install
 
 install:: install-$(RUNTIMED)
diff -urN ocaml-4.00/config/Makefile ocaml-4.00-android/config/Makefile
--- ocaml-4.00/config/Makefile	1970-01-01 03:00:00.000000000 +0300
+++ ocaml-4.00-android/config/Makefile	2012-04-06 02:39:45.431995987 +0400
@@ -0,0 +1,75 @@
+# generated by ./configure 
+PREFIX=/usr/local/ocaml/android
+PLATFORM=/home/serp/android/ndk/platforms/android-8/arch-arm
+SDK=/home/serp/android/ndk/toolchains/arm-linux-androideabi-4.4.3/prebuilt/linux-x86
+BINDIR=$(PREFIX)/bin
+LIBDIR=$(PREFIX)/lib/ocaml
+STUBLIBDIR=$(LIBDIR)/stublibs
+MANDIR=$(PREFIX)/man
+MANEXT=1
+RANLIB=$(SDK)/bin/arm-linux-androideabi-ranlib
+RANLIBCMD=$(RANLIB)
+ARCMD=$(SDK)/bin/arm-linux-androideabi-ar
+SHARPBANGSCRIPTS=true
+BNG_ARCH=generic
+BNG_ASM_LEVEL=0
+PTHREAD_LINK=
+LIBBFD_LINK=-lbfd -ldl -liberty -lz
+#-mfloat-abi=softfp -mfpu=vfpv3 
+BYTECC=$(SDK)/bin/arm-linux-androideabi-gcc -march=armv7-a --sysroot=$(PLATFORM)
+BYTECCCOMPOPTS=-fno-defer-pop -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT -D__ARM_EABI__ -DANDROID
+BYTECCLINKOPTS= -Wl,-E
+#BYTECCLIBS= -lm  -ldl -lcurses -lpthread
+#BYTECCLIBS= -lm  -ldl -lcurses -lpthread
+BYTECCLIBS= -lm  -ldl 
+BYTECCRPATH=-Wl,-rpath,
+EXE=
+SUPPORTS_SHARED_LIBRARIES=true
+SHAREDCCCOMPOPTS=-fPIC
+MKSHAREDLIBRPATH=-Wl,-rpath,
+NATDYNLINKOPTS=-Wl,-E
+SYSLIB=-l$(1)
+#ml let syslib x = "-l"^x;;
+
+### How to build a static library
+MKLIB=$(ARCMD) rc $(1) $(2); $(RANLIB) $(1)
+#ml let mklib out files opts = Printf.sprintf "ar rc %s %s %s; ranlib %s" out opts files out;;
+ARCH=arm
+MODEL=armv7
+SYSTEM=linux_eabihf
+NATIVECC=$(BYTECC)
+NATIVECCCOMPOPTS=-Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT -D__ARM_EABI__ -DANDROID
+NATIVECCPROFOPTS=-Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT -D__ARM_EABI__ -DANDROID
+NATIVECCLINKOPTS=
+NATIVECCRPATH=-Wl,-rpath,
+NATIVECCLIBS= -lm  -ldl
+ASM=$(NATIVECC) -D__ARM_EABI__ -c 
+ASPP=$(ASM)
+ASPPPROFFLAGS=-DPROFILING
+PROFILING=noprof
+DYNLINKOPTS= -ldl
+OTHERLIBRARIES=unix str num dynlink bigarray threads
+DEBUGGER=ocamldebugger
+CC_PROFILE=-pg
+SYSTHREAD_SUPPORT=false
+PARTIALLD=ld -r
+PACKLD=$(PARTIALLD) $(NATIVECCLINKOPTS) -o\ 
+DLLCCCOMPOPTS=
+IFLEXDIR=
+O=o
+A=a
+SO=so
+EXT_OBJ=.o
+EXT_ASM=.s
+EXT_LIB=.a
+EXT_DLL=.so
+EXTRALIBS=
+CCOMPTYPE=cc
+TOOLCHAIN=cc
+NATDYNLINK=true
+CMXS=cmxs
+MKEXE=$(BYTECC)
+MKDLL=$(NATIVECC) -shared
+MKMAINDLL=$(NATIVECC) -shared
+RUNTIMED=noruntimed
+ASM_CFI_SUPPORTED=true
diff -urN ocaml-4.00/config/m.h ocaml-4.00-android/config/m.h
--- ocaml-4.00/config/m.h	1970-01-01 03:00:00.000000000 +0300
+++ ocaml-4.00-android/config/m.h	2012-04-05 00:53:31.620744018 +0400
@@ -0,0 +1,16 @@
+#ifndef __PIC__
+#  define ARCH_CODE32
+#endif
+#undef ARCH_SIXTYFOUR
+#define SIZEOF_INT 4
+#define SIZEOF_LONG 4
+#define SIZEOF_PTR 4
+#define SIZEOF_SHORT 2
+#define ARCH_INT64_TYPE long long
+#define ARCH_UINT64_TYPE unsigned long long
+#define ARCH_INT64_PRINTF_FORMAT "ll"
+#undef ARCH_BIG_ENDIAN
+#undef ARCH_ALIGN_DOUBLE
+#undef ARCH_ALIGN_INT64
+#undef NONSTANDARD_DIV_MOD
+#define ASM_CFI_SUPPORTED
diff -urN ocaml-4.00/config/s.h ocaml-4.00-android/config/s.h
--- ocaml-4.00/config/s.h	1970-01-01 03:00:00.000000000 +0300
+++ ocaml-4.00-android/config/s.h	2012-04-06 01:05:04.254769169 +0400
@@ -0,0 +1,51 @@
+#define OCAML_OS_TYPE "Unix"
+#define OCAML_STDLIB_DIR "/usr/local/ocaml/android/lib"
+#define POSIX_SIGNALS
+#define HAS_C99_FLOAT_OPS
+#define HAS_GETRUSAGE
+#define HAS_TIMES
+#undef HAS_TERMCAP
+#define HAS_SOCKETS
+#define HAS_SOCKLEN_T
+#define HAS_INET_ATON
+#define HAS_IPV6
+#define HAS_UNISTD
+#define HAS_OFF_T
+#define HAS_DIRENT
+#define HAS_REWINDDIR
+#define HAS_LOCKF
+#define HAS_MKFIFO
+#define HAS_GETCWD
+#define HAS_GETWD
+#define HAS_GETPRIORITY
+#define HAS_UTIME
+#define HAS_UTIMES
+#define HAS_DUP2
+#define HAS_FCHMOD
+#define HAS_TRUNCATE
+#define HAS_SYS_SELECT_H
+#define HAS_SELECT
+#define HAS_SYMLINK
+#define HAS_WAITPID
+#define HAS_WAIT4
+#define HAS_GETGROUPS
+#define HAS_SETGROUPS
+#define HAS_INITGROUPS
+#define HAS_TERMIOS
+#define HAS_ASYNC_IO
+#define HAS_SETITIMER
+#define HAS_GETHOSTNAME
+#define HAS_UNAME
+#define HAS_GETTIMEOFDAY
+#define HAS_MKTIME
+#define HAS_SETSID
+#define HAS_PUTENV
+#define HAS_LOCALE
+#define SUPPORT_DYNAMIC_LINKING
+#define HAS_MMAP
+#define HAS_PWRITE
+#define HAS_GETHOSTBYNAME_R 6
+#undef HAS_GETHOSTBYADDR_R
+#undef HAS_STACK_OVERFLOW_DETECTION
+#define HAS_SIGWAIT
+#undef HAS_LIBBFD
diff -urN ocaml-4.00/Makefile.android ocaml-4.00-android/Makefile.android
--- ocaml-4.00/Makefile.android	1970-01-01 03:00:00.000000000 +0300
+++ ocaml-4.00-android/Makefile.android	2012-04-06 01:26:41.387515019 +0400
@@ -0,0 +1,354 @@
+include config/Makefile
+include stdlib/StdlibModules
+
+CAMLC=ocamlc.opt
+CAMLOPT=ocamlopt.opt
+COMPFLAGS=-strict-sequence -warn-error A $(INCLUDES)
+LINKFLAGS=
+
+CAMLYACC=ocamlyacc
+YACCFLAGS=-v
+CAMLLEX=ocamllex.opt
+CAMLDEP=ocamldep.opt
+DEPFLAGS=$(INCLUDES)
+CAMLRUN=ocamlrun
+SHELL=/bin/sh
+MKDIR=mkdir -p
+
+INCLUDES=-I utils -I parsing -I typing -I bytecomp -I asmcomp -I driver \
+	 -I toplevel
+
+UTILS=utils/misc.cmo utils/tbl.cmo utils/config.cmo \
+  utils/clflags.cmo utils/terminfo.cmo utils/ccomp.cmo utils/warnings.cmo \
+  utils/consistbl.cmo
+
+OPTUTILS=$(UTILS)
+
+PARSING=parsing/location.cmo parsing/longident.cmo \
+  parsing/syntaxerr.cmo parsing/parser.cmo \
+  parsing/lexer.cmo parsing/parse.cmo parsing/printast.cmo
+
+TYPING=typing/ident.cmo typing/path.cmo \
+  typing/primitive.cmo typing/types.cmo \
+  typing/btype.cmo typing/oprint.cmo \
+  typing/subst.cmo typing/predef.cmo \
+  typing/datarepr.cmo typing/env.cmo \
+  typing/typedtree.cmo typing/ctype.cmo \
+  typing/printtyp.cmo typing/includeclass.cmo \
+  typing/mtype.cmo typing/includecore.cmo \
+  typing/includemod.cmo typing/parmatch.cmo \
+  typing/typetexp.cmo typing/stypes.cmo typing/typecore.cmo \
+  typing/typedecl.cmo typing/typeclass.cmo \
+  typing/typemod.cmo
+
+COMP=bytecomp/lambda.cmo bytecomp/printlambda.cmo \
+  bytecomp/typeopt.cmo bytecomp/switch.cmo bytecomp/matching.cmo \
+  bytecomp/translobj.cmo bytecomp/translcore.cmo \
+  bytecomp/translclass.cmo bytecomp/translmod.cmo \
+  bytecomp/simplif.cmo bytecomp/runtimedef.cmo
+
+BYTECOMP=bytecomp/meta.cmo bytecomp/instruct.cmo bytecomp/bytegen.cmo \
+  bytecomp/printinstr.cmo bytecomp/opcodes.cmo bytecomp/emitcode.cmo \
+  bytecomp/bytesections.cmo bytecomp/dll.cmo bytecomp/symtable.cmo \
+  bytecomp/bytelink.cmo bytecomp/bytelibrarian.cmo bytecomp/bytepackager.cmo
+
+ASMCOMP=asmcomp/arch.cmo asmcomp/debuginfo.cmo \
+  asmcomp/cmm.cmo asmcomp/printcmm.cmo \
+  asmcomp/reg.cmo asmcomp/mach.cmo asmcomp/proc.cmo \
+  asmcomp/clambda.cmo asmcomp/compilenv.cmo \
+  asmcomp/closure.cmo asmcomp/cmmgen.cmo \
+  asmcomp/printmach.cmo asmcomp/selectgen.cmo asmcomp/selection.cmo \
+  asmcomp/comballoc.cmo asmcomp/liveness.cmo \
+  asmcomp/spill.cmo asmcomp/split.cmo \
+  asmcomp/interf.cmo asmcomp/coloring.cmo \
+  asmcomp/reloadgen.cmo asmcomp/reload.cmo \
+  asmcomp/printlinear.cmo asmcomp/linearize.cmo \
+  asmcomp/schedgen.cmo asmcomp/scheduling.cmo \
+  asmcomp/emitaux.cmo asmcomp/emit.cmo asmcomp/asmgen.cmo \
+  asmcomp/asmlink.cmo asmcomp/asmlibrarian.cmo asmcomp/asmpackager.cmo
+
+DRIVER=driver/pparse.cmo driver/errors.cmo driver/compile.cmo \
+  driver/main_args.cmo driver/main.cmo
+
+OPTDRIVER= driver/pparse.cmo driver/opterrors.cmo driver/optcompile.cmo \
+  driver/main_args.cmo driver/optmain.cmo
+
+PERVASIVES=$(STDLIB_MODULES) outcometree topdirs toploop
+
+OPTOBJS=$(OPTUTILS) $(PARSING) $(TYPING) $(COMP) $(ASMCOMP) $(OPTDRIVER)
+
+
+all: runtime runtimeopt ocamlopt.opt libraryopt otherlibrariesopt
+
+runtime:
+	cd byterun; $(MAKE) all
+	if test -f stdlib/libcamlrun.a; then :; else \
+	  ln -s ../byterun/libcamlrun.a stdlib/libcamlrun.a; fi
+
+clean::
+	cd byterun; $(MAKE) clean
+	rm -f stdlib/libcamlrun.a
+	rm -f stdlib/caml
+
+# The runtime system for the native-code compiler
+
+runtimeopt: makeruntimeopt
+	cp asmrun/libasmrun.a stdlib/libasmrun.a
+
+makeruntimeopt:
+	cd asmrun; $(MAKE) all
+
+clean::
+	cd asmrun; $(MAKE) clean
+	rm -f stdlib/libasmrun.a
+
+alldepend::
+	cd asmrun; $(MAKE) depend
+
+ocamlopt.opt: $(OPTOBJS:.cmo=.cmx)
+	$(CAMLOPT) $(LINKFLAGS) -o ocamlopt.opt $(OPTOBJS:.cmo=.cmx)
+	@sed -e 's|@compiler@|ocamlc.opt|' \
+	  driver/ocamlcomp.sh.in > ocamlcomp.sh
+	@chmod +x ocamlcomp.sh
+	@sed -e 's|@compiler@|$$topdir/ocamlopt.opt|' \
+	  driver/ocamlcomp.sh.in > ocamlcompopt.sh
+	@chmod +x ocamlcompopt.sh
+
+partialclean::
+	rm -f ocamlcomp.sh ocamlcompopt.sh ocamlopt.opt
+
+libraryopt:
+	cd stdlib; $(MAKE) allopt
+
+partialclean::
+	cd stdlib; $(MAKE) clean
+
+alldepend::
+	cd stdlib; $(MAKE) depend
+
+ocamlmklib:
+	cd tools; $(MAKE) ocamlmklib
+
+partialclean::
+	cd tools; $(MAKE) clean
+
+
+otherlibrariesopt: ocamlmklib
+	for i in $(OTHERLIBRARIES); do \
+	  (cd otherlibs/$$i; $(MAKE) allopt) || exit $$?; \
+	done
+
+partialclean::
+	for i in $(OTHERLIBRARIES); do \
+	  (cd otherlibs/$$i; $(MAKE) partialclean); \
+	done
+
+
+
+# Installation of the native-code compiler
+install:
+	if test -d $(BINDIR); then : ; else $(MKDIR) $(BINDIR); fi
+	if test -d $(LIBDIR); then : ; else $(MKDIR) $(LIBDIR); fi
+	cp typing/outcometree.cmi typing/outcometree.mli $(LIBDIR)
+	cd byterun; $(MAKE) installopt
+	cd asmrun; $(MAKE) install
+	cd stdlib; $(MAKE) installopt
+	for i in $(OTHERLIBRARIES); \
+	  do (cd otherlibs/$$i; $(MAKE) installopt) || exit $$?; done
+	cp ocamlopt.opt $(BINDIR)/ocamlopt.opt$(EXE)
+	ln -fs $(BINDIR)/ocamlopt.opt $(BINDIR)/ocamlopt
+	cp tools/ocamlmklib $(BINDIR)
+	cp config/Makefile $(LIBDIR)/Makefile.config
+
+clean::
+	for i in $(OTHERLIBRARIES); do (cd otherlibs/$$i; $(MAKE) clean); done
+
+alldepend::
+	for i in $(OTHERLIBRARIES); do (cd otherlibs/$$i; $(MAKE) depend); done
+
+# The configuration file
+
+utils/config.ml: utils/config.mlp config/Makefile
+	@rm -f utils/config.ml
+	sed -e 's|%%LIBDIR%%|$(LIBDIR)|' \
+	    -e 's|%%BYTERUN%%|$(BINDIR)/ocamlrun|' \
+	    -e 's|%%CCOMPTYPE%%|cc|' \
+	    -e 's|%%BYTECC%%|$(BYTECC) $(BYTECCCOMPOPTS) $(SHAREDCCCOMPOPTS)|' \
+	    -e 's|%%NATIVECC%%|$(NATIVECC) $(NATIVECCCOMPOPTS)|' \
+	    -e 's|%%PACKLD%%|$(PACKLD)|' \
+	    -e 's|%%BYTECCLIBS%%|$(BYTECCLIBS)|' \
+	    -e 's|%%NATIVECCLIBS%%|$(NATIVECCLIBS)|' \
+	    -e 's|%%RANLIBCMD%%|$(RANLIBCMD)|' \
+	    -e 's|%%ARCMD%%|$(ARCMD)|' \
+	    -e 's|%%CC_PROFILE%%|$(CC_PROFILE)|' \
+	    -e 's|%%ARCH%%|$(ARCH)|' \
+	    -e 's|%%MODEL%%|$(MODEL)|' \
+	    -e 's|%%SYSTEM%%|$(SYSTEM)|' \
+	    -e 's|%%EXT_OBJ%%|.o|' \
+	    -e 's|%%EXT_ASM%%|.s|' \
+	    -e 's|%%EXT_LIB%%|.a|' \
+	    -e 's|%%EXT_DLL%%|.so|' \
+	    -e 's|%%SYSTHREAD_SUPPORT%%|$(SYSTHREAD_SUPPORT)|' \
+	    -e 's|%%ASM%%|$(ASM)|' \
+	    -e 's|%%MKDLL%%|$(MKDLL)|' \
+	    -e 's|%%MKEXE%%|$(MKEXE)|' \
+	    -e 's|%%MKMAINDLL%%|$(MKMAINDLL)|' \
+	    -e 's|%%ASM_CFI_SUPPORTED%%|$(ASM_CFI_SUPPORTED)|' \
+	    utils/config.mlp > utils/config.ml
+	@chmod -w utils/config.ml
+
+partialclean::
+	rm -f utils/config.ml
+
+beforedepend:: utils/config.ml
+
+partialclean::
+	rm -f myocamlbuild_config.ml tools/myocamlbuild_config.ml
+
+# The parser
+
+parsing/parser.mli parsing/parser.ml: parsing/parser.mly
+	$(CAMLYACC) $(YACCFLAGS) parsing/parser.mly
+
+partialclean::
+	rm -f parsing/parser.mli parsing/parser.ml parsing/parser.output
+
+beforedepend:: parsing/parser.mli parsing/parser.ml
+
+# The lexer
+
+parsing/lexer.ml: parsing/lexer.mll
+	$(CAMLLEX) parsing/lexer.mll
+
+partialclean::
+	rm -f parsing/lexer.ml
+
+beforedepend:: parsing/lexer.ml
+
+# The auxiliary lexer for counting line numbers
+
+parsing/linenum.ml: parsing/linenum.mll
+	$(CAMLLEX) parsing/linenum.mll
+
+partialclean::
+	rm -f parsing/linenum.ml
+
+beforedepend:: parsing/linenum.ml
+
+# The predefined exceptions and primitives
+
+bytecomp/runtimedef.ml: byterun/primitives byterun/fail.h
+	(echo 'let builtin_exceptions = [|'; \
+	 sed -n -e 's|.*/\* \("[A-Za-z_]*"\) \*/$$|  \1;|p' byterun/fail.h | \
+	 sed -e '$$s/;$$//'; \
+	 echo '|]'; \
+	 echo 'let builtin_primitives = [|'; \
+	 sed -e 's/.*/  "&";/' -e '$$s/;$$//' byterun/primitives; \
+	 echo '|]') > bytecomp/runtimedef.ml
+
+partialclean::
+	rm -f bytecomp/runtimedef.ml
+
+beforedepend:: bytecomp/runtimedef.ml
+
+# Choose the right machine-dependent files
+
+# Choose the right machine-dependent files
+
+asmcomp/arch.ml: asmcomp/$(ARCH)/arch.ml
+	ln -s $(ARCH)/arch.ml asmcomp/arch.ml
+
+partialclean::
+	rm -f asmcomp/arch.ml
+
+beforedepend:: asmcomp/arch.ml
+
+asmcomp/proc.ml: asmcomp/$(ARCH)/proc.ml
+	ln -s $(ARCH)/proc.ml asmcomp/proc.ml
+
+partialclean::
+	rm -f asmcomp/proc.ml
+
+beforedepend:: asmcomp/proc.ml
+
+asmcomp/selection.ml: asmcomp/$(ARCH)/selection.ml
+	ln -s $(ARCH)/selection.ml asmcomp/selection.ml
+
+partialclean::
+	rm -f asmcomp/selection.ml
+
+beforedepend:: asmcomp/selection.ml
+
+asmcomp/reload.ml: asmcomp/$(ARCH)/reload.ml
+	ln -s $(ARCH)/reload.ml asmcomp/reload.ml
+
+partialclean::
+	rm -f asmcomp/reload.ml
+
+beforedepend:: asmcomp/reload.ml
+
+asmcomp/scheduling.ml: asmcomp/$(ARCH)/scheduling.ml
+	ln -s $(ARCH)/scheduling.ml asmcomp/scheduling.ml
+
+partialclean::
+	rm -f asmcomp/scheduling.ml
+
+beforedepend:: asmcomp/scheduling.ml
+
+# Preprocess the code emitters
+
+asmcomp/emit.ml: asmcomp/$(ARCH)/emit.mlp tools/cvt_emit
+	$(CAMLRUN) tools/cvt_emit < asmcomp/$(ARCH)/emit.mlp > asmcomp/emit.ml \
+	|| { rm -f asmcomp/emit.ml; exit 2; }
+
+partialclean::
+	rm -f asmcomp/emit.ml
+
+beforedepend:: asmcomp/emit.ml
+
+tools/cvt_emit: tools/cvt_emit.mll
+	cd tools; \
+	$(MAKE) CAMLC="ocamlc" cvt_emit
+
+# Default rules
+
+.SUFFIXES: .ml .mli .cmo .cmi .cmx
+
+.ml.cmo:
+	$(CAMLC) $(COMPFLAGS) -c $<
+
+.mli.cmi:
+	$(CAMLC) $(COMPFLAGS) -c $<
+
+.ml.cmx:
+	$(CAMLOPT) $(COMPFLAGS) -c $<
+
+partialclean::
+	for d in utils parsing typing bytecomp asmcomp driver toplevel tools; \
+	  do rm -f $$d/*.cm[iox] $$d/*.annot $$d/*.[so] $$d/*~; done
+	rm -f *~
+
+depend: beforedepend
+	(for d in utils parsing typing bytecomp asmcomp driver toplevel; \
+	 do $(CAMLDEP) $(DEPFLAGS) $$d/*.mli $$d/*.ml; \
+	 done) > .depend
+
+alldepend:: depend
+
+clean:: partialclean
+
+distclean:
+	./build/distclean.sh
+
+.PHONY: all backup bootstrap camlp4opt camlp4out checkstack clean
+.PHONY: partialclean beforedepend alldepend cleanboot coldstart
+.PHONY: compare core coreall
+.PHONY: coreboot defaultentry depend distclean install installopt
+.PHONY: library library-cross libraryopt ocamlbuild-mixed-boot
+.PHONY: ocamlbuild.byte ocamlbuild.native ocamldebugger ocamldoc
+.PHONY: ocamldoc.opt ocamllex ocamllex.opt ocamltools ocamltools.opt
+.PHONY: ocamlyacc opt-core opt opt.opt otherlibraries
+.PHONY: otherlibrariesopt package-macosx promote promote-cross
+.PHONY: restore runtime runtimeopt makeruntimeopt world world.opt
+
+include .depend
diff -urN ocaml-4.00/otherlibs/dynlink/Makefile ocaml-4.00-android/otherlibs/dynlink/Makefile
--- ocaml-4.00/otherlibs/dynlink/Makefile	2012-04-05 00:03:13.401559121 +0400
+++ ocaml-4.00-android/otherlibs/dynlink/Makefile	2012-04-05 01:05:27.081617269 +0400
@@ -17,7 +17,7 @@
 
 include ../../config/Makefile
 
-CAMLC=../../boot/ocamlrun ../../ocamlc
+CAMLC=../../ocamlcomp.sh
 CAMLOPT=../../ocamlcompopt.sh
 INCLUDES=-I ../../utils -I ../../typing -I ../../bytecomp -I ../../asmcomp
 COMPFLAGS=-warn-error A -I ../../stdlib $(INCLUDES)
diff -urN ocaml-4.00/otherlibs/Makefile.shared ocaml-4.00-android/otherlibs/Makefile.shared
--- ocaml-4.00/otherlibs/Makefile.shared	2012-04-05 00:03:13.334925784 +0400
+++ ocaml-4.00-android/otherlibs/Makefile.shared	2012-04-05 01:04:36.753456855 +0400
@@ -20,7 +20,7 @@
 
 # Compilation options
 CC=$(BYTECC)
-CAMLRUN=$(ROOTDIR)/boot/ocamlrun
+CAMLRUN=ocamlrun
 COMPFLAGS=-warn-error A -g $(EXTRACAMLFLAGS)
 MKLIB=$(CAMLRUN) $(ROOTDIR)/tools/ocamlmklib
 
@@ -65,9 +65,13 @@
 	if test -n "$(HEADERS)"; then cp $(HEADERS) $(LIBDIR)/caml/; fi
 
 installopt:
+	cp lib$(CLIBNAME).$(A) $(LIBDIR)/
+	cd $(LIBDIR); $(RANLIB) lib$(CLIBNAME).$(A)
 	cp $(CAMLOBJS_NAT) $(LIBNAME).cmxa $(LIBNAME).$(A) $(LIBDIR)/
 	cd $(LIBDIR); $(RANLIB) $(LIBNAME).a
+	cp $(CMIFILES) $(CMIFILES:.cmi=.mli) $(LIBDIR)/
 	if test -f $(LIBNAME).cmxs; then cp $(LIBNAME).cmxs $(LIBDIR)/; fi
+	if test -n "$(HEADERS)"; then cp $(HEADERS) $(LIBDIR)/caml/; fi
 
 partialclean:
 	rm -f *.cm*
diff -urN ocaml-4.00/otherlibs/systhreads/Makefile ocaml-4.00-android/otherlibs/systhreads/Makefile
--- ocaml-4.00/otherlibs/systhreads/Makefile	2012-04-05 00:03:13.311604114 +0400
+++ ocaml-4.00-android/otherlibs/systhreads/Makefile	2012-04-05 01:07:30.263338105 +0400
@@ -17,7 +17,7 @@
 
 CAMLC=../../ocamlcomp.sh -I ../unix
 CAMLOPT=../../ocamlcompopt.sh -I ../unix
-MKLIB=../../boot/ocamlrun ../../tools/ocamlmklib
+MKLIB=../../tools/ocamlmklib
 COMPFLAGS=-warn-error A -g
 
 BYTECODE_C_OBJS=st_stubs_b.o
@@ -61,7 +61,6 @@
 # modular to me this way. -- Alain
 
 
-$(THREAD_OBJS:.cmo=.cmx): ../../ocamlopt
 
 partialclean:
 	rm -f *.cm*
@@ -80,6 +79,10 @@
 	cp threads.h $(LIBDIR)/caml/threads.h
 
 installopt:
+	if test -d $(LIBDIR)/threads; then :; else mkdir $(LIBDIR)/threads; fi
+	cp $(THREAD_OBJS:.cmo=.cmi) $(LIBDIR)/threads
+	cp thread.mli mutex.mli condition.mli event.mli threadUnix.mli $(LIBDIR)
+	cp threads.h $(LIBDIR)/caml/threads.h
 	cp libthreadsnat.a $(LIBDIR)/libthreadsnat.a
 	cd $(LIBDIR); $(RANLIB) libthreadsnat.a
 	cp $(THREAD_OBJS:.cmo=.cmx) threads.cmxa threads.a $(LIBDIR)/threads
diff -urN ocaml-4.00/otherlibs/unix/getpw.c ocaml-4.00-android/otherlibs/unix/getpw.c
--- ocaml-4.00/otherlibs/unix/getpw.c	2012-04-05 00:03:13.331594117 +0400
+++ ocaml-4.00-android/otherlibs/unix/getpw.c	2012-04-06 01:16:21.959131281 +0400
@@ -29,7 +29,7 @@
   Begin_roots5 (name, passwd, gecos, dir, shell);
     name = copy_string(entry->pw_name);
     passwd = copy_string(entry->pw_passwd);
-#ifndef __BEOS__
+#if !defined(__BEOS__) && !defined(ANDROID)
     gecos = copy_string(entry->pw_gecos);
 #else
     gecos = copy_string("");
diff -urN ocaml-4.00/otherlibs/unix/termios.c ocaml-4.00-android/otherlibs/unix/termios.c
--- ocaml-4.00/otherlibs/unix/termios.c	2012-04-05 00:03:13.334925784 +0400
+++ ocaml-4.00-android/otherlibs/unix/termios.c	2012-04-06 01:35:06.410885935 +0400
@@ -265,11 +265,16 @@
   return Val_unit;
 }
 
+#if defined(ANDROID)
+CAMLprim value unix_tcdrain(value fd)
+{ invalid_argument("tcdrain not implemented"); }
+#else
 CAMLprim value unix_tcdrain(value fd)
 {
   if (tcdrain(Int_val(fd)) == -1) uerror("tcdrain", Nothing);
   return Val_unit;
 }
+#endif
 
 static int queue_flag_table[] = {
   TCIFLUSH, TCOFLUSH, TCIOFLUSH
diff -urN ocaml-4.00/stdlib/camlinternalOO.ml ocaml-4.00-android/stdlib/camlinternalOO.ml
--- ocaml-4.00/stdlib/camlinternalOO.ml	2012-04-05 00:03:19.741721261 +0400
+++ ocaml-4.00-android/stdlib/camlinternalOO.ml	2012-04-06 00:47:02.991360384 +0400
@@ -80,7 +80,8 @@
   (* reduce to 31 bits *)
   accu := !accu land (1 lsl 31 - 1);
   (* make it signed for 64 bits architectures *)
-  let tag = if !accu > 0x3FFFFFFF then !accu - (1 lsl 31) else !accu in
+  let tag = !accu in
+(*   let tag = if !accu > 0x3FFFFFFF then !accu - (1 lsl 31) else !accu in *)
   (* Printf.eprintf "%s = %d\n" s tag; flush stderr; *)
   magic tag
 
diff -urN ocaml-4.00/stdlib/Makefile ocaml-4.00-android/stdlib/Makefile
--- ocaml-4.00/stdlib/Makefile	2012-04-05 00:03:19.765042929 +0400
+++ ocaml-4.00-android/stdlib/Makefile	2012-04-05 01:09:30.793052077 +0400
@@ -15,7 +15,7 @@
 
 include Makefile.shared
 
-allopt: stdlib.cmxa std_exit.cmx allopt-$(PROFILING)
+allopt: stdlib.cmxa std_exit.cmx camlheader camlheader_ur allopt-$(PROFILING)
 
 allopt-noprof:
 
@@ -26,6 +26,8 @@
 
 installopt-default:
 	cp stdlib.cmxa stdlib.a std_exit.o *.cmx $(LIBDIR)
+	cp stdlib.cmxa stdlib.a std_exit.o *.cmx *.cmi *.mli *.ml camlheader camlheader_ur $(LIBDIR)
+	cp stdlib.cmxa stdlib.a std_exit.o *.cmx $(LIBDIR)
 	cd $(LIBDIR); $(RANLIB) stdlib.a
 
 installopt-noprof:
diff -urN ocaml-4.00/stdlib/Makefile.shared ocaml-4.00-android/stdlib/Makefile.shared
--- ocaml-4.00/stdlib/Makefile.shared	2012-04-05 00:03:19.761711262 +0400
+++ ocaml-4.00-android/stdlib/Makefile.shared	2012-04-06 00:40:09.627996298 +0400
@@ -14,14 +14,12 @@
 # $Id: Makefile.shared 11156 2011-07-27 14:17:02Z doligez $
 
 include ../config/Makefile
-RUNTIME=../boot/ocamlrun
-COMPILER=../ocamlc
-CAMLC=$(RUNTIME) $(COMPILER)
+RUNTIME=ocamlrun
+CAMLC=ocamlc.opt
 COMPFLAGS=-strict-sequence -g -warn-error A -nostdlib
-OPTCOMPILER=../ocamlopt
-CAMLOPT=$(RUNTIME) $(OPTCOMPILER)
+CAMLOPT=../ocamlopt.opt
 OPTCOMPFLAGS=-warn-error A -nostdlib -g
-CAMLDEP=../boot/ocamlrun ../tools/ocamldep
+CAMLDEP=ocamldep.opt
 
 OBJS=pervasives.cmo $(OTHERS)
 OTHERS=array.cmo list.cmo char.cmo string.cmo sys.cmo \
@@ -80,11 +78,6 @@
 .ml.p.cmx:
 	$(CAMLOPT) $(OPTCOMPFLAGS) `./Compflags $@` -p -c -o $*.p.cmx $<
 
-# Dependencies on the compiler
-$(OBJS) std_exit.cmo: $(COMPILER)
-$(OBJS:.cmo=.cmi) std_exit.cmi: $(COMPILER)
-$(OBJS:.cmo=.cmx) std_exit.cmx: $(OPTCOMPILER)
-$(OBJS:.cmo=.p.cmx) std_exit.p.cmx: $(OPTCOMPILER)
 
 # Dependencies on Pervasives (not tracked by ocamldep)
 $(OBJS) std_exit.cmo: pervasives.cmi
diff -urN ocaml-4.00/stdlib/pervasives.ml ocaml-4.00-android/stdlib/pervasives.ml
--- ocaml-4.00/stdlib/pervasives.ml	2012-04-05 00:03:19.735057927 +0400
+++ ocaml-4.00-android/stdlib/pervasives.ml	2012-04-05 01:12:13.493779186 +0400
@@ -72,7 +72,7 @@
 external ( lsr ) : int -> int -> int = "%lsrint"
 external ( asr ) : int -> int -> int = "%asrint"
 
-let min_int = 1 lsl (if 1 lsl 31 = 0 then 30 else 62)
+let min_int = 1 lsl 30
 let max_int = min_int - 1
 
 (* Floating-point operations *)
Binary files ocaml-4.00/tools/cvt_emit.bak and ocaml-4.00-android/tools/cvt_emit.bak differ
diff -urN ocaml-4.00/tools/Makefile.shared ocaml-4.00-android/tools/Makefile.shared
--- ocaml-4.00/tools/Makefile.shared	2012-04-05 00:03:12.838507413 +0400
+++ ocaml-4.00-android/tools/Makefile.shared	2012-04-05 01:14:16.660455015 +0400
@@ -14,10 +14,12 @@
 
 include ../config/Makefile
 
-CAMLRUN=../boot/ocamlrun
-CAMLC=$(CAMLRUN) ../boot/ocamlc -strict-sequence -nostdlib -I ../boot
-CAMLOPT=$(CAMLRUN) ../ocamlopt -nostdlib -I ../stdlib
-CAMLLEX=$(CAMLRUN) ../boot/ocamllex
+CAMLRUN=ocamlrun
+CAMLC=ocamlc.opt -strict-sequence 
+#-nostdlib -I ../boot
+CAMLOPT=ocamlopt.opt
+#-nostdlib -I ../stdlib
+CAMLLEX=ocamllex
 INCLUDES=-I ../utils -I ../parsing -I ../typing -I ../bytecomp -I ../asmcomp \
 	 -I ../driver
 COMPFLAGS= -warn-error A $(INCLUDES)
